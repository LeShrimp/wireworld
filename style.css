body {
    background-color: #272121;
}


h1#title {
    text-align: center;
    color: #FF9900;
    font-family: "Consolas", monospace;
}

.container p {
    color: #B7DDDD;
    text-align: center;
    font-family: "Consolas", monospace;
}

#blueprintbox {
    display: inline-block;
    overflow: auto;
}

#blueprintbox canvas {
    margin-left: auto;
    margin-right: auto;
    display: inherit;
}

.container {
    display: block;
    margin-left: auto;
    margin-right: auto;
    /*
     * Not sure how these compute, inline blocks have some margin sometimes.
     * See http://css-tricks.com/fighting-the-space-between-inline-block-elements/
     * I could consider using SASS to  create variables ant dynamically compute
     * width and height.
     */
    width: 761px;
    height: 560px;
    border: 0 solid #ccc;
}

#circuitboard, #printedwireworld {
    width: 600px;
    height: 400px;
    display: inline-block;
    border: 1px solid #B7DDDD;
}

#blueprintbox {
    display: inline-block;
    width: 150px;
    height: 400px;
    border: 1px solid #ccc;
}

#blueprintbox div {
    padding-top: 8px;
}

#messagebox {
    display: inline-block;
    width: 600px;
    height: 150px;
    vertical-align: top;
    overflow: auto;
    border: 1px solid #B7DDDD;
}

#messagebox p {
    text-align: left;
    margin-left: 20px;
    margin-right: 20px;
}

#playpause {
    display: inline-block;
    width: 150px;
    height: 150px;
    border: 1px solid #B7DDDD;
}
